import 'package:equatable/equatable.dart';import 'package:flutter/material.dart';import '/core/app_export.dart';import '../models/playback_item_model.dart';import 'package:the_6_18_tune_cast___music_streaming__podcast_app/presentation/playback_screen/models/playback_model.dart';part 'playback_state.dart';final playbackNotifier = StateNotifierProvider<PlaybackNotifier, PlaybackState>((ref) => PlaybackNotifier(PlaybackState(playbackModelObj: PlaybackModel(playbackItemList: [PlaybackItemModel(automix: "Automix", allowsSeamless: "Allows seamless transitions between songs on select playlists."), PlaybackItemModel(automix: "Gapless", allowsSeamless: "Allows gapless playback."), PlaybackItemModel(automix: "Allow Explicit Content", allowsSeamless: "Turn on play explicit content."), PlaybackItemModel(automix: "Show Unplayable Songs", allowsSeamless: "Show song that are unplayable."), PlaybackItemModel(automix: "Normalize Volume", allowsSeamless: "Set the same volume level for all tracks."), PlaybackItemModel(automix: "Mono Audio", allowsSeamless: "Makes tke left and right speakers play the same audio."), PlaybackItemModel(automix: "Device Broadcast Status", allowsSeamless: "Allow other apps on your device to see what you are listening to.")]))));
/// A notifier that manages the state of a Playback according to the event that is dispatched to it.
class PlaybackNotifier extends StateNotifier<PlaybackState> {PlaybackNotifier(PlaybackState state) : super(state);

void changeSwitchBox1(int index, bool value, ) { List<PlaybackItemModel> newList = List<PlaybackItemModel>.from(state.playbackModelObj!.playbackItemList); newList[index] = newList[index].copyWith(isSelectedSwitch: value); state = state.copyWith(playbackModelObj: state.playbackModelObj?.copyWith(playbackItemList: newList)); } 
 }
