import '../my_library_page/widgets/frame2_item_widget.dart';import 'bloc/my_library_bloc.dart';import 'models/frame2_item_model.dart';import 'models/my_library_model.dart';import 'package:flutter/material.dart';import 'package:the_3_18_tune_cast___music_streaming__podcast_app/core/app_export.dart';import 'package:the_3_18_tune_cast___music_streaming__podcast_app/widgets/app_bar/appbar_leading_image.dart';import 'package:the_3_18_tune_cast___music_streaming__podcast_app/widgets/app_bar/appbar_title.dart';import 'package:the_3_18_tune_cast___music_streaming__podcast_app/widgets/app_bar/appbar_trailing_iconbutton_one.dart';import 'package:the_3_18_tune_cast___music_streaming__podcast_app/widgets/app_bar/appbar_trailing_image.dart';import 'package:the_3_18_tune_cast___music_streaming__podcast_app/widgets/app_bar/custom_app_bar.dart';class MyLibraryPage extends StatelessWidget {const MyLibraryPage({Key? key}) : super(key: key);

static Widget builder(BuildContext context) { return BlocProvider<MyLibraryBloc>(create: (context) => MyLibraryBloc(MyLibraryState(myLibraryModelObj: MyLibraryModel()))..add(MyLibraryInitialEvent()), child: MyLibraryPage()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(appBar: _buildAppBar(context), body: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(vertical: 30.v), child: Column(children: [_buildAutoLayoutHorizontal(context), SizedBox(height: 12.v), _buildFrame(context), SizedBox(height: 29.v), Divider(indent: 24.h, endIndent: 24.h), SizedBox(height: 29.v), Padding(padding: EdgeInsets.symmetric(horizontal: 24.h), child: _buildSongs(context, categoriesMusic: ImageConstant.imgDownload, songs: "lbl_playlists".tr, onTapSongs: () {onTapPlaylist(context);})), SizedBox(height: 29.v), _buildDownloads(context), SizedBox(height: 32.v), _buildPodcasts(context), SizedBox(height: 32.v), _buildAlbums(context), SizedBox(height: 32.v), Padding(padding: EdgeInsets.symmetric(horizontal: 24.h), child: _buildSongs(context, categoriesMusic: ImageConstant.imgCategoriesMusic, songs: "lbl_songs".tr)), SizedBox(height: 29.v), _buildArtists(context), SizedBox(height: 5.v)])))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(height: 51.v, leadingWidth: 56.h, leading: AppbarLeadingImage(imagePath: ImageConstant.imgVector, margin: EdgeInsets.only(left: 24.h, top: 9.v, bottom: 10.v)), title: AppbarTitle(text: "lbl_my_library".tr, margin: EdgeInsets.only(left: 16.h)), actions: [AppbarTrailingImage(imagePath: ImageConstant.imgRewind, margin: EdgeInsets.only(left: 24.h, top: 11.v, right: 12.h)), AppbarTrailingIconbuttonOne(imagePath: ImageConstant.imgSettingsGray90001, margin: EdgeInsets.only(left: 20.h, top: 11.v, right: 36.h))]); } 
/// Section Widget
Widget _buildAutoLayoutHorizontal(BuildContext context) { return Padding(padding: EdgeInsets.symmetric(horizontal: 24.h), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: EdgeInsets.only(top: 1.v), child: Text("lbl_your_history".tr, style: theme.textTheme.headlineSmall)), Padding(padding: EdgeInsets.only(bottom: 10.v), child: Text("lbl_see_all".tr, style: CustomTextStyles.titleMediumOnPrimaryContainer16))])); } 
/// Section Widget
Widget _buildFrame(BuildContext context) { return Align(alignment: Alignment.centerRight, child: SizedBox(height: 193.v, child: BlocSelector<MyLibraryBloc, MyLibraryState, MyLibraryModel?>(selector: (state) => state.myLibraryModelObj, builder: (context, myLibraryModelObj) {return ListView.separated(padding: EdgeInsets.only(left: 24.h), scrollDirection: Axis.horizontal, separatorBuilder: (context, index) {return SizedBox(width: 12.h);}, itemCount: myLibraryModelObj?.frame2ItemList.length ?? 0, itemBuilder: (context, index) {Frame2ItemModel model = myLibraryModelObj?.frame2ItemList[index] ?? Frame2ItemModel(); return Frame2ItemWidget(model);});}))); } 
/// Section Widget
Widget _buildDownloads(BuildContext context) { return GestureDetector(onTap: () {onTapDownloads(context);}, child: Padding(padding: EdgeInsets.symmetric(horizontal: 24.h), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Row(mainAxisAlignment: MainAxisAlignment.center, children: [CustomImageView(imagePath: ImageConstant.imgIconlyCurvedArrow, height: 28.adaptSize, width: 28.adaptSize), Padding(padding: EdgeInsets.only(left: 20.h), child: Text("lbl_downloads".tr, style: theme.textTheme.headlineSmall))]), CustomImageView(imagePath: ImageConstant.imgArrowRight, height: 20.adaptSize, width: 20.adaptSize, margin: EdgeInsets.symmetric(vertical: 4.v))]))); } 
/// Section Widget
Widget _buildPodcasts(BuildContext context) { return GestureDetector(onTap: () {onTapPodcasts(context);}, child: Padding(padding: EdgeInsets.symmetric(horizontal: 24.h), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [SizedBox(width: 145.h, child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [CustomImageView(imagePath: ImageConstant.imgCategoriesPodcast, height: 28.adaptSize, width: 28.adaptSize), Text("lbl_podcasts".tr, style: theme.textTheme.headlineSmall)])), CustomImageView(imagePath: ImageConstant.imgArrowRight, height: 20.adaptSize, width: 20.adaptSize, margin: EdgeInsets.symmetric(vertical: 4.v))]))); } 
/// Section Widget
Widget _buildAlbums(BuildContext context) { return Padding(padding: EdgeInsets.symmetric(horizontal: 24.h), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [SizedBox(width: 132.h, child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [CustomImageView(imagePath: ImageConstant.imgIconlyCurvedPlay, height: 28.adaptSize, width: 28.adaptSize), Text("lbl_albums".tr, style: theme.textTheme.headlineSmall)])), CustomImageView(imagePath: ImageConstant.imgArrowRight, height: 20.adaptSize, width: 20.adaptSize, margin: EdgeInsets.symmetric(vertical: 4.v))])); } 
/// Section Widget
Widget _buildArtists(BuildContext context) { return Padding(padding: EdgeInsets.symmetric(horizontal: 24.h), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [SizedBox(width: 120.h, child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [CustomImageView(imagePath: ImageConstant.imgIconlyCurved3, height: 28.adaptSize, width: 28.adaptSize), Text("lbl_artists".tr, style: theme.textTheme.headlineSmall)])), CustomImageView(imagePath: ImageConstant.imgArrowRight, height: 20.adaptSize, width: 20.adaptSize, margin: EdgeInsets.symmetric(vertical: 4.v))])); } 
/// Common widget
Widget _buildSongs(BuildContext context, {required String categoriesMusic, required String songs, Function? onTapSongs, }) { return GestureDetector(onTap: () {onTapSongs!.call();}, child: Row(mainAxisAlignment: MainAxisAlignment.center, crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(imagePath: categoriesMusic, height: 28.adaptSize, width: 28.adaptSize, margin: EdgeInsets.only(bottom: 3.v)), Padding(padding: EdgeInsets.only(left: 20.h, top: 2.v), child: Text(songs, style: theme.textTheme.headlineSmall!.copyWith(color: appTheme.gray90001))), Spacer(), CustomImageView(imagePath: ImageConstant.imgArrowRight, height: 20.adaptSize, width: 20.adaptSize, margin: EdgeInsets.only(top: 4.v, bottom: 7.v))])); } 
/// Navigates to the playlistsScreen when the action is triggered.
onTapPlaylist(BuildContext context) { NavigatorService.pushNamed(AppRoutes.playlistsScreen, ); } 
/// Navigates to the downloadsScreen when the action is triggered.
onTapDownloads(BuildContext context) { NavigatorService.pushNamed(AppRoutes.downloadsScreen, ); } 
/// Navigates to the yourLikesTabContainerScreen when the action is triggered.
onTapPodcasts(BuildContext context) { NavigatorService.pushNamed(AppRoutes.yourLikesTabContainerScreen, ); } 
 }
