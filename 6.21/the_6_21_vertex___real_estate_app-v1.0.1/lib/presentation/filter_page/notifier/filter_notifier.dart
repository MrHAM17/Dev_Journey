import 'package:equatable/equatable.dart';import 'package:flutter/material.dart';import '/core/app_export.dart';import '../models/home_item_model.dart';import '../models/options2_item_model.dart';import 'package:the_6_21_vertex___real_estate_app/presentation/filter_page/models/filter_model.dart';part 'filter_state.dart';final filterNotifier = StateNotifierProvider<FilterNotifier, FilterState>((ref) => FilterNotifier(FilterState(selectedDropDownValue: SelectionPopupModel(title: ''), selectedDropDownValue1: SelectionPopupModel(title: ''), selectedDropDownValue2: SelectionPopupModel(title: ''), selectedDropDownValue3: SelectionPopupModel(title: ''), filterModelObj: FilterModel(dropdownItemList: [SelectionPopupModel(id: 1, title: "Item One", isSelected: true), SelectionPopupModel(id: 2, title: "Item Two"), SelectionPopupModel(id: 3, title: "Item Three")], dropdownItemList1: [SelectionPopupModel(id: 1, title: "Item One", isSelected: true), SelectionPopupModel(id: 2, title: "Item Two"), SelectionPopupModel(id: 3, title: "Item Three")], dropdownItemList2: [SelectionPopupModel(id: 1, title: "Item One", isSelected: true), SelectionPopupModel(id: 2, title: "Item Two"), SelectionPopupModel(id: 3, title: "Item Three")], dropdownItemList3: [SelectionPopupModel(id: 1, title: "Item One", isSelected: true), SelectionPopupModel(id: 2, title: "Item Two"), SelectionPopupModel(id: 3, title: "Item Three")], homeItemList: List.generate(5, (index) => HomeItemModel()), options2ItemList: List.generate(8, (index) => Options2ItemModel())))));
/// A notifier that manages the state of a Filter according to the event that is dispatched to it.
class FilterNotifier extends StateNotifier<FilterState> {FilterNotifier(FilterState state) : super(state);

void onSelectedChipView1(int index, bool value, ) { List<HomeItemModel> newList = List<HomeItemModel>.from(state.filterModelObj!.homeItemList); newList[index] = newList[index].copyWith(isSelected: value); state = state.copyWith(filterModelObj: state.filterModelObj?.copyWith(homeItemList: newList)); } 
void onSelectedChipView2(int index, bool value, ) { List<Options2ItemModel> newList = List<Options2ItemModel>.from(state.filterModelObj!.options2ItemList); newList[index] = newList[index].copyWith(isSelected: value); state = state.copyWith(filterModelObj: state.filterModelObj?.copyWith(options2ItemList: newList)); } 
 }
