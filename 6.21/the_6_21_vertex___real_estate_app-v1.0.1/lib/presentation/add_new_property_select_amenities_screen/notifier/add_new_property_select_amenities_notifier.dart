import 'package:equatable/equatable.dart';import 'package:flutter/material.dart';import '/core/app_export.dart';import '../models/options_item_model.dart';import 'package:the_6_21_vertex___real_estate_app/presentation/add_new_property_select_amenities_screen/models/add_new_property_select_amenities_model.dart';part 'add_new_property_select_amenities_state.dart';final addNewPropertySelectAmenitiesNotifier = StateNotifierProvider<AddNewPropertySelectAmenitiesNotifier, AddNewPropertySelectAmenitiesState>((ref) => AddNewPropertySelectAmenitiesNotifier(AddNewPropertySelectAmenitiesState(addNewPropertySelectAmenitiesModelObj: AddNewPropertySelectAmenitiesModel(optionsItemList: List.generate(8, (index) => OptionsItemModel())))));
/// A notifier that manages the state of a AddNewPropertySelectAmenities according to the event that is dispatched to it.
class AddNewPropertySelectAmenitiesNotifier extends StateNotifier<AddNewPropertySelectAmenitiesState> {AddNewPropertySelectAmenitiesNotifier(AddNewPropertySelectAmenitiesState state) : super(state);

void onSelectedChipView1(int index, bool value, ) { List<OptionsItemModel> newList = List<OptionsItemModel>.from(state.addNewPropertySelectAmenitiesModelObj!.optionsItemList); newList[index] = newList[index].copyWith(isSelected: value); state = state.copyWith(addNewPropertySelectAmenitiesModelObj: state.addNewPropertySelectAmenitiesModelObj?.copyWith(optionsItemList: newList)); } 
 }
